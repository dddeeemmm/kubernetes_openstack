---

- block:

### Metrics server Needed for kind: HPA

  - name: Create namespace istio-operator
    k8s:
      definition:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: istio-operator

  - name: Create customResourceDefinition for istio
    k8s:
      definition:
        apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          name: istiocontrolplanes.install.istio.io
        spec:
          group: install.istio.io
          names:
            kind: IstioControlPlane
            listKind: IstioControlPlaneList
            plural: istiocontrolplanes
            singular: istiocontrolplane
            shortNames:
            - icp
          scope: Namespaced
          subresources:
            status: {}
          validation:
            openAPIV3Schema:
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the latest
                    internal value, and may reject unrecognized values.
                    More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource this
                    object represents. Servers may infer this from the endpoint the client
                    submits requests to. Cannot be updated. In CamelCase.
                    More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                spec:
                  description: 'Specification of the desired state of the istio control plane resource.
                    More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                  type: object
                status:
                  description: 'Status describes each of istio control plane component status at the current time.
                    0 means NONE, 1 means UPDATING, 2 means HEALTHY, 3 means ERROR, 4 means RECONCILING.
                    More info: https://github.com/istio/operator/blob/master/pkg/apis/istio/v1alpha2/v1alpha2.pb.html &
                    https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                  type: object
          versions:
          - name: v1alpha2
            served: true
            storage: true

  - name: Create serviceAccount for istio
    k8s:
      definition:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          namespace: istio-operator
          name: istio-operator

  - name: Create clusterRole for istio
    k8s:
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: istio-operator
        rules:
        # istio groups
        - apiGroups:
          - authentication.istio.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - config.istio.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - install.istio.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - networking.istio.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - rbac.istio.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - security.istio.io
          resources:
          - '*'
          verbs:
          - '*'
        # k8s groups
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions.apiextensions.k8s.io
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - apps
          - extensions
          resources:
          - daemonsets
          - deployments
          - deployments/finalizers
          - ingresses
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - roles
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - endpoints
          - events
          - namespaces
          - pods
          - persistentvolumeclaims
          - secrets
          - services
          - serviceaccounts
          verbs:
          - '*'


  - name: Create clusterRoleBinding for istio
    k8s:
      definition:
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: istio-operator
        subjects:
        - kind: ServiceAccount
          name: istio-operator
          namespace: istio-operator
        roleRef:
          kind: ClusterRole
          name: istio-operator
          apiGroup: rbac.authorization.k8s.io


  - name: Create service for istio
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-operator
          labels:
            name: istio-operator
          name: istio-operator-metrics
        spec:
          ports:
          - name: http-metrics
            port: 8383
            targetPort: 8383
          selector:
            name: istio-operator


  - name: Create deployment for istio-operator
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-operator
          name: istio-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: istio-operator
          template:
            metadata:
              labels:
                name: istio-operator
              annotations:
                reloader.stakater.com/auto: "true"
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              serviceAccountName: istio-operator
              containers:
                - name: istio-operator
                  image: docker.io/istio/operator:1.4.0
                  command:
                  - istio-operator
                  - server
                  imagePullPolicy: Always
                  resources:
                    limits:
                      cpu: 200m
                      memory: 256Mi
                    requests:
                      cpu: 50m
                      memory: 128Mi
                  env:
                    - name: WATCH_NAMESPACE
                      value: ""
                    - name: LEADER_ELECTION_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: OPERATOR_NAME
                      value: "istio-operator"

  - name: Create istioControlPlane from istio-operator (all services - profile demo) # https://istio.io/docs/setup/install/standalone-operator/
    k8s:
      definition:
        apiVersion: install.istio.io/v1alpha2
        kind: IstioControlPlane
        metadata:
          namespace: istio-operator
          name: example-istiocontrolplane
        spec:
          profile: demo

  - name: wait another action istio-operator sleep for 30 seconds and continue with playbook
    wait_for:
      timeout: 30

  tags: istio

- block:

  - name: Create svc for grafana
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            install.operator.istio.io/chart-owner: Grafana
            install.operator.istio.io/owner-generation: "1"
          namespace: istio-system
          labels:
            app: grafana
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            release: istio
          name: grafana
        spec:
          ports:
          - name: http
            port: 3000
            protocol: TCP
            targetPort: 3000
          selector:
            app: grafana
          sessionAffinity: None
          type: ClusterIP

  - name: Create deployment for grafana
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "1"
            install.operator.istio.io/chart-owner: Grafana
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: grafana
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            release: istio
          name: grafana
        spec:
          progressDeadlineSeconds: 600
          replicas: 3
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              app: grafana
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: grafana
                chart: grafana
                heritage: Tiller
                release: istio-system
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                      - key: node-role.kubernetes.io/master
                        operator: NotIn
                        values:
                          - ""
              containers:
              - env:
                - name: GRAFANA_PORT
                  value: "3000"
                - name: GF_AUTH_BASIC_ENABLED
                  value: "false"
                - name: GF_AUTH_ANONYMOUS_ENABLED
                  value: "true"
                - name: GF_AUTH_ANONYMOUS_ORG_ROLE
                  value: Admin
                - name: GF_PATHS_DATA
                  value: /data/grafana
                image: grafana/grafana:6.4.3
                imagePullPolicy: IfNotPresent
                name: grafana
                ports:
                - containerPort: 3000
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /api/health
                    port: 3000
                    scheme: HTTP
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  requests:
                    cpu: 10m
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /data/grafana
                  name: data
                - mountPath: /var/lib/grafana/dashboards/istio/citadel-dashboard.json
                  name: dashboards-istio-citadel-dashboard
                  readOnly: true
                  subPath: citadel-dashboard.json
                - mountPath: /var/lib/grafana/dashboards/istio/galley-dashboard.json
                  name: dashboards-istio-galley-dashboard
                  readOnly: true
                  subPath: galley-dashboard.json
                - mountPath: /var/lib/grafana/dashboards/istio/istio-mesh-dashboard.json
                  name: dashboards-istio-istio-mesh-dashboard
                  readOnly: true
                  subPath: istio-mesh-dashboard.json
                - mountPath: /var/lib/grafana/dashboards/istio/istio-performance-dashboard.json
                  name: dashboards-istio-istio-performance-dashboard
                  readOnly: true
                  subPath: istio-performance-dashboard.json
                - mountPath: /var/lib/grafana/dashboards/istio/istio-service-dashboard.json
                  name: dashboards-istio-istio-service-dashboard
                  readOnly: true
                  subPath: istio-service-dashboard.json
                - mountPath: /var/lib/grafana/dashboards/istio/istio-workload-dashboard.json
                  name: dashboards-istio-istio-workload-dashboard
                  readOnly: true
                  subPath: istio-workload-dashboard.json
                - mountPath: /var/lib/grafana/dashboards/istio/mixer-dashboard.json
                  name: dashboards-istio-mixer-dashboard
                  readOnly: true
                  subPath: mixer-dashboard.json
                - mountPath: /var/lib/grafana/dashboards/istio/pilot-dashboard.json
                  name: dashboards-istio-pilot-dashboard
                  readOnly: true
                  subPath: pilot-dashboard.json
                - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
                  name: config
                  subPath: datasources.yaml
                - mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml
                  name: config
                  subPath: dashboardproviders.yaml
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext:
                fsGroup: 472
                runAsUser: 472
              terminationGracePeriodSeconds: 30
              volumes:
              - configMap:
                  defaultMode: 420
                  name: istio-grafana
                name: config
              - emptyDir: {}
                name: data
              - configMap:
                  defaultMode: 420
                  name: istio-grafana-configuration-dashboards-citadel-dashboard
                name: dashboards-istio-citadel-dashboard
              - configMap:
                  defaultMode: 420
                  name: istio-grafana-configuration-dashboards-galley-dashboard
                name: dashboards-istio-galley-dashboard
              - configMap:
                  defaultMode: 420
                  name: istio-grafana-configuration-dashboards-istio-mesh-dashboard
                name: dashboards-istio-istio-mesh-dashboard
              - configMap:
                  defaultMode: 420
                  name: istio-grafana-configuration-dashboards-istio-performance-dashboard
                name: dashboards-istio-istio-performance-dashboard
              - configMap:
                  defaultMode: 420
                  name: istio-grafana-configuration-dashboards-istio-service-dashboard
                name: dashboards-istio-istio-service-dashboard
              - configMap:
                  defaultMode: 420
                  name: istio-grafana-configuration-dashboards-istio-workload-dashboard
                name: dashboards-istio-istio-workload-dashboard
              - configMap:
                  defaultMode: 420
                  name: istio-grafana-configuration-dashboards-mixer-dashboard
                name: dashboards-istio-mixer-dashboard
              - configMap:
                  defaultMode: 420
                  name: istio-grafana-configuration-dashboards-pilot-dashboard
                name: dashboards-istio-pilot-dashboard

  - name: Create svc for citadel
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            install.operator.istio.io/chart-owner: Citadel
            install.operator.istio.io/owner-generation: "1"
          namespace: istio-system
          labels:
            app: security
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: citadel
            release: istio
          name: istio-citadel
        spec:
          ports:
          - name: grpc-citadel
            port: 8060
            protocol: TCP
            targetPort: 8060
          - name: http-monitoring
            port: 15014
            protocol: TCP
            targetPort: 15014
          selector:
            app: citadel
          sessionAffinity: None
          type: ClusterIP

  - name: Create deployment for citadel
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "1"
            install.operator.istio.io/chart-owner: Citadel
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: security
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: citadel
            release: istio
          name: istio-citadel
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              istio: citadel
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: citadel
                istio: citadel
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - args:
                - --append-dns-names=true
                - --grpc-port=8060
                - --citadel-storage-namespace=istio-system
                - --custom-dns-names=istio-galley-service-account.istio-config:istio-galley.istio-config.svc,istio-galley-service-account.istio-control:istio-galley.istio-control.svc,istio-galley-service-account.istio-control-master:istio-galley.istio-control-master.svc,istio-galley-service-account.istio-master:istio-galley.istio-master.svc,istio-galley-service-account.istio-pilot11:istio-galley.istio-pilot11.svc,istio-pilot-service-account.istio-control:istio-pilot.istio-control,istio-pilot-service-account.istio-pilot11:istio-pilot.istio-system,istio-sidecar-injector-service-account.istio-control:istio-sidecar-injector.istio-control.svc,istio-sidecar-injector-service-account.istio-control-master:istio-sidecar-injector.istio-control-master.svc,istio-sidecar-injector-service-account.istio-master:istio-sidecar-injector.istio-master.svc,istio-sidecar-injector-service-account.istio-pilot11:istio-sidecar-injector.istio-pilot11.svc,istio-sidecar-injector-service-account.istio-remote:istio-sidecar-injector.istio-remote.svc,
                - --self-signed-ca=true
                - --trust-domain=cluster.local
                - --workload-cert-ttl=2160h
                env:
                - name: CITADEL_ENABLE_NAMESPACES_BY_DEFAULT
                  value: "true"
                image: gcr.io/istio-testing/citadel:1.4-dev
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /version
                    port: 15014
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1
                name: citadel
                resources:
                  requests:
                    cpu: 10m
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: istio-citadel-service-account
              serviceAccountName: istio-citadel-service-account
              terminationGracePeriodSeconds: 30

  - name: Create svc for egress-gateway
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-system
          annotations:
            install.operator.istio.io/chart-owner: EgressGateway
            install.operator.istio.io/owner-generation: "1"
          labels:
            app: istio-egressgateway
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: egressgateway
            release: istio
          name: istio-egressgateway
        spec:
          ports:
          - name: http2
            port: 80
            protocol: TCP
            targetPort: 80
          - name: https
            port: 443
            protocol: TCP
            targetPort: 443
          - name: tls
            port: 15443
            protocol: TCP
            targetPort: 15443
          selector:
            app: istio-egressgateway
          sessionAffinity: None
          type: ClusterIP

  - name: Create deployment for egress-gateway
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "1"
            install.operator.istio.io/chart-owner: EgressGateway
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: istio-egressgateway
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: egressgateway
            release: istio
          name: istio-egressgateway
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              app: istio-egressgateway
              istio: egressgateway
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: istio-egressgateway
                chart: gateways
                heritage: Tiller
                istio: egressgateway
                release: istio
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - args:
                - proxy
                - router
                - --domain
                - $(POD_NAMESPACE).svc.cluster.local
                - --proxyLogLevel=warning
                - --proxyComponentLogLevel=misc:error
                - --log_output_level=default:info
                - --drainDuration
                - 45s
                - --parentShutdownDuration
                - 1m0s
                - --connectTimeout
                - 10s
                - --serviceCluster
                - istio-egressgateway
                - --zipkinAddress
                - zipkin.istio-system:9411
                - --proxyAdminPort
                - "15000"
                - --statusPort
                - "15020"
                - --controlPlaneAuthPolicy
                - NONE
                - --discoveryAddress
                - istio-pilot.istio-system:15010
                - --trust-domain=cluster.local
                env:
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: INSTANCE_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                - name: HOST_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.hostIP
                - name: SERVICE_ACCOUNT
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.serviceAccountName
                - name: ISTIO_META_WORKLOAD_NAME
                  value: istio-egressgateway
                - name: ISTIO_META_OWNER
                  value: kubernetes://api/apps/v1/namespaces/istio-system/deployments/istio-egressgateway
                - name: ISTIO_META_MESH_ID
                  value: cluster.local
                - name: ISTIO_META_POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: ISTIO_META_CONFIG_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: ISTIO_META_ROUTER_MODE
                  value: sni-dnat
                - name: ISTIO_METAJSON_LABELS
                  value: |
                    {"app":"istio-egressgateway","istio":"egressgateway"}
                - name: ISTIO_META_CLUSTER_ID
                  value: Kubernetes
                - name: SDS_ENABLED
                  value: "false"
                image: gcr.io/istio-testing/proxyv2:1.4-dev
                imagePullPolicy: IfNotPresent
                name: istio-proxy
                ports:
                - containerPort: 80
                  protocol: TCP
                - containerPort: 443
                  protocol: TCP
                - containerPort: 15443
                  protocol: TCP
                - containerPort: 15090
                  name: http-envoy-prom
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 30
                  httpGet:
                    path: /healthz/ready
                    port: 15020
                    scheme: HTTP
                  initialDelaySeconds: 1
                  periodSeconds: 2
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  limits:
                    cpu: "2"
                    memory: 1Gi
                  requests:
                    cpu: 10m
                    memory: 40Mi
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /etc/certs
                  name: istio-certs
                  readOnly: true
                - mountPath: /etc/istio/egressgateway-certs
                  name: egressgateway-certs
                  readOnly: true
                - mountPath: /etc/istio/egressgateway-ca-certs
                  name: egressgateway-ca-certs
                  readOnly: true
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              terminationGracePeriodSeconds: 30
              volumes:
              - name: istio-certs
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: istio.default
              - name: egressgateway-certs
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: istio-egressgateway-certs
              - name: egressgateway-ca-certs
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: istio-egressgateway-ca-certs

  - name: Create svc for galley
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-system
          annotations:
            install.operator.istio.io/chart-owner: Galley
            install.operator.istio.io/owner-generation: "1"
          labels:
            app: galley
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: galley
            release: istio
          name: istio-galley
          selfLink: /api/v1/namespaces/istio-system/services/istio-galley
        spec:
          ports:
          - name: https-validation
            port: 443
            protocol: TCP
            targetPort: 9443
          - name: http-monitoring
            port: 15014
            protocol: TCP
            targetPort: 15014
          - name: grpc-mcp
            port: 9901
            protocol: TCP
            targetPort: 9901
          - name: grpc-tls-mcp
            port: 15019
            protocol: TCP
            targetPort: 15019
          selector:
            istio: galley
          sessionAffinity: None
          type: ClusterIP

  - name: Create deployment for galley
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "1"
            install.operator.istio.io/chart-owner: Galley
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: galley
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: galley
            release: istio
          name: istio-galley
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              istio: galley
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: galley
                chart: galley
                heritage: Tiller
                istio: galley
                release: istio
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - command:
                - /usr/local/bin/galley
                - server
                - --meshConfigFile=/etc/mesh-config/mesh
                - --livenessProbeInterval=1s
                - --livenessProbePath=/tmp/healthliveness
                - --readinessProbePath=/tmp/healthready
                - --readinessProbeInterval=1s
                - --insecure=true
                - --enable-validation=true
                - --enable-reconcileWebhookConfiguration=true
                - --enable-server=true
                - --deployment-namespace=istio-system
                - --validation-webhook-config-file
                - /etc/config/validatingwebhookconfiguration.yaml
                - --monitoringPort=15014
                - --validation-port=9443
                - --log_output_level=default:info
                image: gcr.io/istio-testing/galley:1.4-dev
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  exec:
                    command:
                    - /usr/local/bin/galley
                    - probe
                    - --probe-path=/tmp/healthliveness
                    - --interval=10s
                  failureThreshold: 3
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1
                name: galley
                ports:
                - containerPort: 9443
                  protocol: TCP
                - containerPort: 15014
                  protocol: TCP
                - containerPort: 15019
                  protocol: TCP
                - containerPort: 9901
                  protocol: TCP
                readinessProbe:
                  exec:
                    command:
                    - /usr/local/bin/galley
                    - probe
                    - --probe-path=/tmp/healthready
                    - --interval=10s
                  failureThreshold: 3
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  requests:
                    cpu: 100m
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /etc/certs
                  name: istio-certs
                  readOnly: true
                - mountPath: /etc/config
                  name: config
                  readOnly: true
                - mountPath: /etc/mesh-config
                  name: mesh-config
                  readOnly: true
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: istio-galley-service-account
              serviceAccountName: istio-galley-service-account
              terminationGracePeriodSeconds: 30
              volumes:
              - name: istio-certs
                secret:
                  defaultMode: 420
                  secretName: istio.istio-galley-service-account
              - configMap:
                  defaultMode: 420
                  name: istio-galley-configuration
                name: config
              - configMap:
                  defaultMode: 420
                  name: istio-mesh-galley
                name: mesh-config

  - name: Delete svc istio-ingressgateway
    shell: kubectl delete svc -n istio-system istio-ingressgateway
    ignore_errors: yes

  - name: Delete deploy istio-ingressgateway
    shell: kubectl delete deploy -n istio-system istio-ingressgateway
    ignore_errors: yes

  - name: Create svc for ingress-gateway
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-system
          annotations:
            install.operator.istio.io/chart-owner: IngressGateway
            install.operator.istio.io/owner-generation: "1"
            service.beta.kubernetes.io/openstack-internal-load-balancer: "true"
          finalizers:
          - service.kubernetes.io/load-balancer-cleanup
          labels:
            app: istio-ingressgateway
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: ingressgateway
            release: istio
          name: istio-ingressgateway
        spec:
          externalTrafficPolicy: Cluster
          ports:
          - name: status-port
            port: 15020
            protocol: TCP
            targetPort: 15020
          - name: http2
            port: 80
            protocol: TCP
            targetPort: 80
          - name: https
            port: 443
            protocol: TCP
            targetPort: 443
          - name: kiali
            port: 15029
            protocol: TCP
            targetPort: 15029
          - name: prometheus
            port: 15030
            protocol: TCP
            targetPort: 15030
          - name: grafana
            port: 15031
            protocol: TCP
            targetPort: 15031
          - name: tracing
            port: 15032
            protocol: TCP
            targetPort: 15032
          - name: tls
            port: 15443
            protocol: TCP
            targetPort: 15443
          - name: dashboard
            port: 9090
            protocol: TCP
            targetPort: 9090
          selector:
            app: istio-ingressgateway
          sessionAffinity: None
          type: LoadBalancer

  - name: Create deploy for ingress-gateway
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "1"
            install.operator.istio.io/chart-owner: IngressGateway
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: istio-ingressgateway
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: ingressgateway
            release: istio
          name: istio-ingressgateway
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              app: istio-ingressgateway
              istio: ingressgateway
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: istio-ingressgateway
                chart: gateways
                heritage: Tiller
                istio: ingressgateway
                release: istio
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - args:
                - proxy
                - router
                - --domain
                - $(POD_NAMESPACE).svc.cluster.local
                - --proxyLogLevel=warning
                - --proxyComponentLogLevel=misc:error
                - --log_output_level=default:info
                - --drainDuration
                - 45s
                - --parentShutdownDuration
                - 1m0s
                - --connectTimeout
                - 10s
                - --serviceCluster
                - istio-ingressgateway
                - --zipkinAddress
                - zipkin.istio-system:9411
                - --proxyAdminPort
                - "15000"
                - --statusPort
                - "15020"
                - --controlPlaneAuthPolicy
                - NONE
                - --discoveryAddress
                - istio-pilot.istio-system:15010
                - --trust-domain=cluster.local
                env:
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: INSTANCE_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                - name: HOST_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.hostIP
                - name: SERVICE_ACCOUNT
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.serviceAccountName
                - name: ISTIO_META_WORKLOAD_NAME
                  value: istio-ingressgateway
                - name: ISTIO_META_OWNER
                  value: kubernetes://api/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway
                - name: ISTIO_META_MESH_ID
                  value: cluster.local
                - name: ISTIO_META_POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: ISTIO_META_CONFIG_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: ISTIO_META_ROUTER_MODE
                  value: sni-dnat
                - name: ISTIO_METAJSON_LABELS
                  value: |
                    {"app":"istio-ingressgateway","istio":"ingressgateway"}
                - name: ISTIO_META_CLUSTER_ID
                  value: Kubernetes
                - name: SDS_ENABLED
                  value: "false"
                image: gcr.io/istio-testing/proxyv2:1.4-dev
                imagePullPolicy: IfNotPresent
                name: istio-proxy
                ports:
                - containerPort: 15020
                  name: status-port
                  protocol: TCP
                - containerPort: 80
                  name: http2
                  protocol: TCP
                - containerPort: 443
                  name: https
                  protocol: TCP
                - containerPort: 15029
                  name: kiali
                  protocol: TCP
                - containerPort: 15030
                  name: prometheus
                  protocol: TCP
                - containerPort: 15031
                  name: grafana
                  protocol: TCP
                - containerPort: 15032
                  name: tracing
                  protocol: TCP
                - containerPort: 15443
                  name: tls
                  protocol: TCP
                - containerPort: 15011
                  protocol: TCP
                - containerPort: 8060
                  protocol: TCP
                - containerPort: 15090
                  name: http-envoy-prom
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 30
                  httpGet:
                    path: /healthz/ready
                    port: 15020
                    scheme: HTTP
                  initialDelaySeconds: 1
                  periodSeconds: 2
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  limits:
                    cpu: "2"
                    memory: 1Gi
                  requests:
                    cpu: 10m
                    memory: 40Mi
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /etc/certs
                  name: istio-certs
                  readOnly: true
                - mountPath: /etc/istio/ingressgateway-certs
                  name: ingressgateway-certs
                  readOnly: true
                - mountPath: /etc/istio/ingressgateway-ca-certs
                  name: ingressgateway-ca-certs
                  readOnly: true
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: istio-ingressgateway-service-account
              serviceAccountName: istio-ingressgateway-service-account
              terminationGracePeriodSeconds: 30
              volumes:
              - name: istio-certs
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: istio.istio-ingressgateway-service-account
              - name: ingressgateway-certs
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: istio-ingressgateway-certs
              - name: ingressgateway-ca-certs
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: istio-ingressgateway-ca-certs

  - name: Create svc for pilot
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-system
          annotations:
            install.operator.istio.io/chart-owner: Pilot
            install.operator.istio.io/owner-generation: "1"
          labels:
            app: pilot
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: pilot
            release: istio
          name: istio-pilot
        spec:
          ports:
          - name: grpc-xds
            port: 15010
            protocol: TCP
            targetPort: 15010
          - name: https-xds
            port: 15011
            protocol: TCP
            targetPort: 15011
          - name: http-legacy-discovery
            port: 8080
            protocol: TCP
            targetPort: 8080
          - name: http-monitoring
            port: 15014
            protocol: TCP
            targetPort: 15014
          selector:
            istio: pilot
          sessionAffinity: None
          type: ClusterIP

  - name: Create deployment for pilot
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "2"
            install.operator.istio.io/chart-owner: Pilot
            install.operator.istio.io/owner-generation: "1"
          labels:
            app: pilot
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: pilot
            release: istio
          name: istio-pilot
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              istio: pilot
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: pilot
                chart: pilot
                heritage: Tiller
                istio: pilot
                release: istio
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - args:
                - discovery
                - --monitoringAddr=:15014
                - --log_output_level=default:info
                - --domain
                - cluster.local
                - --secureGrpcAddr
                - ""
                - --trust-domain=cluster.local
                - --keepaliveMaxServerConnectionAge
                - 30m
                env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: GODEBUG
                  value: gctrace=1
                - name: PILOT_TRACE_SAMPLING
                  value: "100"
                - name: CONFIG_NAMESPACE
                  value: istio-config
                - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND
                  value: "true"
                - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND
                  value: "false"
                image: gcr.io/istio-testing/pilot:1.4-dev
                imagePullPolicy: IfNotPresent
                name: discovery
                ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 15010
                  protocol: TCP
                - containerPort: 15014
                  protocol: TCP
                - containerPort: 15011
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /ready
                    port: 8080
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                resources:
                  requests:
                    cpu: 10m
                    memory: 100Mi
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /etc/istio/config
                  name: config-volume
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: istio-pilot-service-account
              serviceAccountName: istio-pilot-service-account
              terminationGracePeriodSeconds: 30
              volumes:
              - configMap:
                  defaultMode: 420
                  name: istio
                name: config-volume
              - configMap:
                  defaultMode: 420
                  name: pilot-envoy-config
                name: pilot-envoy-config

  - name: Create svc for policy
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-system
          annotations:
            install.operator.istio.io/chart-owner: Policy
            install.operator.istio.io/owner-generation: "1"
          labels:
            app: mixer
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: mixer
            release: istio
          name: istio-policy
        spec:
          ports:
          - name: grpc-mixer
            port: 9091
            protocol: TCP
            targetPort: 9091
          - name: grpc-mixer-mtls
            port: 15004
            protocol: TCP
            targetPort: 15004
          - name: http-policy-monitoring
            port: 15014
            protocol: TCP
            targetPort: 15014
          selector:
            istio: mixer
            istio-mixer-type: policy
          sessionAffinity: None
          type: ClusterIP

  - name: Create deployment for policy
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "1"
            install.operator.istio.io/chart-owner: Policy
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: istio-policy
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: mixer
            release: istio
          name: istio-policy
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              istio: mixer
              istio-mixer-type: policy
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: policy
                istio: mixer
                istio-mixer-type: policy
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - args:
                - --monitoringPort=15014
                - --address
                - tcp://0.0.0.0:9091
                - --log_output_level=default:info
                - --configStoreURL=mcp://istio-galley.istio-system.svc:9901
                - --configDefaultNamespace=istio-system
                - --useAdapterCRDs=false
                - --useTemplateCRDs=false
                - --trace_zipkin_url=http://zipkin.istio-system:9411/api/v1/spans
                env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                image: gcr.io/istio-testing/mixer:1.4-dev
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /version
                    port: 15014
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1
                name: mixer
                ports:
                - containerPort: 9091
                  protocol: TCP
                - containerPort: 15014
                  protocol: TCP
                - containerPort: 42422
                  protocol: TCP
                resources:
                  requests:
                    cpu: 10m
                    memory: 100Mi
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /etc/certs
                  name: istio-certs
                  readOnly: true
                - mountPath: /sock
                  name: uds-socket
                - mountPath: /var/run/secrets/istio.io/policy/adapter
                  name: policy-adapter-secret
                  readOnly: true
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: istio-policy-service-account
              serviceAccountName: istio-policy-service-account
              terminationGracePeriodSeconds: 30
              volumes:
              - name: istio-certs
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: istio.istio-policy-service-account
              - emptyDir: {}
                name: uds-socket
              - name: policy-adapter-secret
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: policy-adapter-secret

  - name: Create svc for sidecar-injection
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-system
          annotations:
            install.operator.istio.io/chart-owner: Injector
            install.operator.istio.io/owner-generation: "1"
          labels:
            app: sidecarInjectorWebhook
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: sidecar-injector
            release: istio
          name: istio-sidecar-injector
        spec:
          ports:
          - name: http-sidecar
            port: 443
            protocol: TCP
            targetPort: 9443
          selector:
            istio: sidecar-injector
          sessionAffinity: None
          type: ClusterIP

  - name: Create deployment for sidecar-injection
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "2"
            install.operator.istio.io/chart-owner: Injector
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: sidecarInjectorWebhook
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: sidecar-injector
            release: istio
          name: istio-sidecar-injector
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              istio: sidecar-injector
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: sidecarInjectorWebhook
                chart: sidecarInjectorWebhook
                heritage: Tiller
                istio: sidecar-injector
                release: istio
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - args:
                - --caCertFile=/etc/istio/certs/root-cert.pem
                - --tlsCertFile=/etc/istio/certs/cert-chain.pem
                - --tlsKeyFile=/etc/istio/certs/key.pem
                - --injectConfig=/etc/istio/inject/config
                - --meshConfig=/etc/istio/config/mesh
                - --port=9443
                - --healthCheckInterval=2s
                - --healthCheckFile=/tmp/health
                - --reconcileWebhookConfig=true
                - --webhookConfigName=istio-sidecar-injector
                - --log_output_level=debug
                image: gcr.io/istio-testing/sidecar_injector:1.4-dev
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  exec:
                    command:
                    - /usr/local/bin/sidecar-injector
                    - probe
                    - --probe-path=/tmp/health
                    - --interval=4s
                  failureThreshold: 3
                  initialDelaySeconds: 4
                  periodSeconds: 4
                  successThreshold: 1
                  timeoutSeconds: 1
                name: sidecar-injector-webhook
                ports:
                - containerPort: 9443
                  protocol: TCP
                readinessProbe:
                  exec:
                    command:
                    - /usr/local/bin/sidecar-injector
                    - probe
                    - --probe-path=/tmp/health
                    - --interval=4s
                  failureThreshold: 3
                  initialDelaySeconds: 4
                  periodSeconds: 4
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  requests:
                    cpu: 10m
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /etc/istio/config
                  name: config-volume
                  readOnly: true
                - mountPath: /etc/istio/certs
                  name: certs
                  readOnly: true
                - mountPath: /etc/istio/inject
                  name: inject-config
                  readOnly: true
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: istio-sidecar-injector-service-account
              serviceAccountName: istio-sidecar-injector-service-account
              terminationGracePeriodSeconds: 30
              volumes:
              - configMap:
                  defaultMode: 420
                  name: injector-mesh
                name: config-volume
              - name: certs
                secret:
                  defaultMode: 420
                  secretName: istio.istio-sidecar-injector-service-account
              - configMap:
                  defaultMode: 420
                  items:
                  - key: config
                    path: config
                  - key: values
                    path: values
                  name: istio-sidecar-injector
                name: inject-config

  - name: Create svc for telemetry
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-system
          annotations:
            install.operator.istio.io/chart-owner: Telemetry
            install.operator.istio.io/owner-generation: "1"
          labels:
            app: mixer
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: mixer
            release: istio
          name: istio-telemetry
        spec:
          ports:
          - name: grpc-mixer
            port: 9091
            protocol: TCP
            targetPort: 9091
          - name: grpc-mixer-mtls
            port: 15004
            protocol: TCP
            targetPort: 15004
          - name: http-monitoring
            port: 15014
            protocol: TCP
            targetPort: 15014
          - name: prometheus
            port: 42422
            protocol: TCP
            targetPort: 42422
          selector:
            istio: mixer
            istio-mixer-type: telemetry
          sessionAffinity: None
          type: ClusterIP

  - name: Create deploy for telemetry
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "1"
            install.operator.istio.io/chart-owner: Telemetry
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: istio-mixer
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            istio: mixer
            release: istio
          name: istio-telemetry
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              istio: mixer
              istio-mixer-type: telemetry
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: telemetry
                istio: mixer
                istio-mixer-type: telemetry
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - args:
                - --monitoringPort=15014
                - --address
                - tcp://0.0.0.0:9091
                - --log_output_level=default:info
                - --configStoreURL=mcp://istio-galley.istio-system.svc:9901
                - --configDefaultNamespace=istio-system
                - --useAdapterCRDs=false
                - --useTemplateCRDs=false
                - --trace_zipkin_url=http://zipkin.istio-system:9411/api/v1/spans
                env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: GOMAXPROCS
                  value: "6"
                image: gcr.io/istio-testing/mixer:1.4-dev
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /version
                    port: 15014
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1
                name: mixer
                ports:
                - containerPort: 9091
                  protocol: TCP
                - containerPort: 15014
                  protocol: TCP
                - containerPort: 42422
                  name: prometheus
                  protocol: TCP
                resources:
                  limits:
                    cpu: 4800m
                    memory: 4G
                  requests:
                    cpu: 50m
                    memory: 100Mi
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /etc/certs
                  name: istio-certs
                  readOnly: true
                - mountPath: /sock
                  name: uds-socket
                - mountPath: /var/run/secrets/istio.io/telemetry/adapter
                  name: telemetry-adapter-secret
                  readOnly: true
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: istio-mixer-service-account
              serviceAccountName: istio-mixer-service-account
              terminationGracePeriodSeconds: 30
              volumes:
              - name: istio-certs
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: istio.istio-mixer-service-account
              - emptyDir: {}
                name: uds-socket
              - name: telemetry-adapter-secret
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: telemetry-adapter-secret
              - configMap:
                  defaultMode: 420
                  name: telemetry-envoy-config
                name: telemetry-envoy-config

  - name: Create deploy for tracing
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "1"
            install.operator.istio.io/chart-owner: Tracing
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: jaeger
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            release: istio
          name: istio-tracing
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              app: jaeger
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "14269"
                prometheus.io/scrape: "true"
                sidecar.istio.io/inject: "false"
              labels:
                app: jaeger
                release: istio
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: BADGER_EPHEMERAL
                  value: "false"
                - name: SPAN_STORAGE_TYPE
                  value: badger
                - name: BADGER_DIRECTORY_VALUE
                  value: /badger/data
                - name: BADGER_DIRECTORY_KEY
                  value: /badger/key
                - name: COLLECTOR_ZIPKIN_HTTP_PORT
                  value: "9411"
                - name: MEMORY_MAX_TRACES
                  value: "50000"
                - name: QUERY_BASE_PATH
                  value: /jaeger
                image: docker.io/jaegertracing/all-in-one:1.14
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /
                    port: 14269
                    scheme: HTTP
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                name: jaeger
                ports:
                - containerPort: 9411
                  protocol: TCP
                - containerPort: 16686
                  protocol: TCP
                - containerPort: 14250
                  protocol: TCP
                - containerPort: 14267
                  protocol: TCP
                - containerPort: 14268
                  protocol: TCP
                - containerPort: 14269
                  protocol: TCP
                - containerPort: 5775
                  protocol: UDP
                - containerPort: 6831
                  protocol: UDP
                - containerPort: 6832
                  protocol: UDP
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /
                    port: 14269
                    scheme: HTTP
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  requests:
                    cpu: 10m
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /badger
                  name: data
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              terminationGracePeriodSeconds: 30
              volumes:
              - emptyDir: {}
                name: data

  - name: Create svc for kiali
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-system
          annotations:
            install.operator.istio.io/chart-owner: Kiali
            install.operator.istio.io/owner-generation: "1"
          labels:
            app: kiali
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            release: istio
          name: kiali
        spec:
          ports:
          - name: http-kiali
            port: 20001
            protocol: TCP
            targetPort: 20001
          selector:
            app: kiali
          sessionAffinity: None
          type: ClusterIP

  - name: Create deploy for kiali
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "2"
            install.operator.istio.io/chart-owner: Kiali
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: kiali
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            release: istio
          name: kiali
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              app: kiali
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                kiali.io/runtimes: go,kiali
                prometheus.io/port: "9090"
                prometheus.io/scrape: "true"
                scheduler.alpha.kubernetes.io/critical-pod: ""
                sidecar.istio.io/inject: "false"
              labels:
                app: kiali
                release: istio
              name: kiali
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - command:
                - /opt/kiali/kiali
                - -config
                - /kiali-configuration/config.yaml
                - -v
                - "3"
                env:
                - name: ACTIVE_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                image: quay.io/kiali/kiali:v1.9
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /kiali/healthz
                    port: 20001
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 1
                name: kiali
                ports:
                - containerPort: 20001
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /kiali/healthz
                    port: 20001
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  requests:
                    cpu: 10m
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /kiali-configuration
                  name: kiali-configuration
                - mountPath: /kiali-cert
                  name: kiali-cert
                - mountPath: /kiali-secret
                  name: kiali-secret
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: kiali-service-account
              serviceAccountName: kiali-service-account
              terminationGracePeriodSeconds: 30
              volumes:
              - configMap:
                  defaultMode: 420
                  name: kiali
                name: kiali-configuration
              - name: kiali-cert
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: istio.kiali-service-account
              - name: kiali-secret
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: kiali

  - name: Create svc for prometheus
    k8s:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          namespace: istio-system
          annotations:
            install.operator.istio.io/chart-owner: Prometheus
            install.operator.istio.io/owner-generation: "1"
            prometheus.io/scrape: "true"
          labels:
            app: prometheus
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            release: istio
          name: prometheus
        spec:
          ports:
          - name: http-prometheus
            port: 9090
            protocol: TCP
            targetPort: 9090
          selector:
            app: prometheus
          sessionAffinity: None
          type: ClusterIP

  - name: Create deploy for prometheus
    k8s:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: istio-system
          annotations:
            deployment.kubernetes.io/revision: "1"
            install.operator.istio.io/chart-owner: Prometheus
            install.operator.istio.io/owner-generation: "1"
          generation: 1
          labels:
            app: prometheus
            install.operator.istio.io/owner-group: install.istio.io
            install.operator.istio.io/owner-kind: IstioControlPlane
            install.operator.istio.io/owner-name: istiocontrolplane
            release: istio
          name: prometheus
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              app: prometheus
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: prometheus
                release: istio
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: node-role.kubernetes.io/master
                          operator: NotIn
                          values:
                            - ""
              containers:
              - args:
                - --storage.tsdb.retention=6h
                - --config.file=/etc/prometheus/prometheus.yml
                image: docker.io/prom/prometheus:v2.12.0
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /-/healthy
                    port: 9090
                    scheme: HTTP
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                name: prometheus
                ports:
                - containerPort: 9090
                  name: http
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /-/ready
                    port: 9090
                    scheme: HTTP
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  requests:
                    cpu: 10m
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /etc/prometheus
                  name: config-volume
                - mountPath: /etc/istio-certs
                  name: istio-certs
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: prometheus
              serviceAccountName: prometheus
              terminationGracePeriodSeconds: 30
              volumes:
              - configMap:
                  defaultMode: 420
                  name: prometheus
                name: config-volume
              - name: istio-certs
                secret:
                  defaultMode: 420
                  secretName: istio.default

  tags: istio_svc_with_deploy