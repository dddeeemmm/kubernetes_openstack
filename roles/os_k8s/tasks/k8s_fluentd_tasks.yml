---

- name: serviceAccount for fluentd
  k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: kube-gelf
        namespace: kube-system

- name: clusterRole for fluentd
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: ClusterRole
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: "true"
        name: kube-gelf-metadata-filter
      rules:
      - apiGroups:
        - ""
        resources:
        - pods
        - pods/exec
        - namespaces
        verbs: ["get", "list", "watch", "create"]

- name: clusterRoleBinding for fluentd
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: ClusterRoleBinding
      metadata:
        name: kube-gelf
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: kube-gelf-metadata-filter
      subjects:
      - kind: ServiceAccount
        name: kube-gelf
        namespace: kube-system

- name: Confgimap for fluentd
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: kube-gelf
        namespace: kube-system
        labels:
          app: kube-gelf
      data:
        GELF_HOST: "{{ graylog_host }}"
        GELF_PORT: "12201"
        GELF_PROTOCOL: "tcp"
        fluent.conf: |
          <match fluent.**>
            @type null
          </match>
      
          <source>
            @type tail
            path /var/log/containers/*.log
            pos_file /pos/containers.pos
            time_key time
            time_format %Y-%m-%dT%H:%M:%S.%NZ
            tag kubernetes.*
            format json
            read_from_head true
          </source>
      
          <filter kubernetes.**>
            @type kubernetes_metadata
            ca_file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
          </filter>
      
          <filter access>
            @type record_transformer
            <record>
              hostname "#{ENV['NODENAME']}"
            </record>
          </filter>
      
          ### NOT COLLECT LOGS FROM ALL EXCEPT NAMESPACE STAGING ###
      
          <match **fluentd**>
            @type null
          </match>
      
          <match **kube-system**>
            @type null
          </match>
      
          <match **monitoring**>
            @type null
          </match>
      
          <match **cert-manager**>
            @type null
          </match>
      
          <match **efs-staging**>
            @type null
          </match>
      
          ##########################################################
      
          <match kubernetes.**>
            @type rewrite_tag_filter
            <rule>
              key $['kubernetes']['labels']['app']
              pattern ^(.+)$
              tag $1
            </rule>
          </match>
      
          <match **>
            @type copy
            <store>
              @type gelf
              include_tag_key true
              host "#{ENV['GELF_HOST']}"
              port "#{ENV['GELF_PORT']}"
              protocol "#{ENV['GELF_PROTOCOL']}"
              flush_interval 10s
              num_threads 2
              use_record_host true
              buffer_chunk_limit 4096K
              buffer_queue_limit 512
              max_retry_wait 300
            </store>
          </match>
      
          # Valid log_level's are: fatal, error, warn, info, debug, trace
          <system>
            log_level warn
          </system>

- name: daemonset for fluentd
  k8s:
    definition:
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: fluentd
        namespace: kube-system
      spec:
        updateStrategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 1
        selector:
          matchLabels:
            app: fluentd
        template:
          metadata:
            labels:
              app: fluentd
            annotations:
              reloader.stakater.com/auto: "true"
          spec:
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                      - key: node-role.kubernetes.io/master
                        operator: NotIn
                        values:
                          - ""
          spec:
            imagePullSecrets:
              - name: registry
            serviceAccountName: kube-gelf
            dnsPolicy: ClusterFirst
            containers:
            - name: agent
              image: "{{ docker_registry }}/docker/common/fluentd:latest"
              imagePullPolicy: "Always"
              env:
              - name: GELF_HOST
                valueFrom:
                  configMapKeyRef:
                    name: kube-gelf
                    key: GELF_HOST
              - name: GELF_PORT
                valueFrom:
                  configMapKeyRef:
                    name: kube-gelf
                    key: GELF_PORT
              - name: GELF_PROTOCOL
                valueFrom:
                  configMapKeyRef:
                    name: kube-gelf
                    key: GELF_PROTOCOL
              - name: NODENAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              volumeMounts:
              - name: varlog
                mountPath: /var/log
                readOnly: true
              - name: gelf-pos
                mountPath: /pos
                readOnly: false
              - name: varlibdockercontainers
                mountPath: /var/lib/docker/containers
                readOnly: true
              - name: kube-gelf-config
                mountPath: /fluentd/etc/fluent.conf
                subPath: fluent.conf
            tolerations:
            - key: node-role.kubernetes.io/master
              operator: Exists
              effect: NoSchedule
            volumes:
            - name: varlog
              hostPath:
                path: /var/log
            - name: varlibdockercontainers
              hostPath:
                path: /var/lib/docker/containers
            - name: kube-gelf-config
              configMap:
                name: kube-gelf
                items:
                - key: fluent.conf
                  path: fluent.conf
            - name: gelf-pos
              hostPath:
                path: /var/log/pos